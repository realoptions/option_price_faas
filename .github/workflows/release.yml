name: release
on:
  push:
    branches:
      master
env:
  CLOUDSDK_CORE_DISABLE_PROMPTS: 1
  PROJECT_ID: finside #use this as source of truth instead of terraform.tfvars
  CUSTOM_GCP_DOMAIN: api2.finside.org
  CUSTOM_RAPID_API_DOMAIN: api3.finside.org
  MAJOR_VERSION: v2
  SERVICE_NAME: realoptions2
  SERVICE_AUTH_NAME: realoptions2-auth

jobs:
  release: 
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - uses: hecrj/setup-rust-action@v1.3.4
      with:
        rust-version: stable

    - name: Build
      run: cargo build
    - name: Run tests stable
      run: |
        cargo test
    
    # https://github.com/google-github-actions/auth?tab=readme-ov-file#workload-identity-federation-through-a-service-account
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/117231459701/locations/global/workloadIdentityPools/github/providers/my-repo'
        service_account: 'ghactions@finside.iam.gserviceaccount.com'
        create_credentials_file: 'true'
    - uses: google-github-actions/setup-gcloud@v2.1.0
      with:
        version: '>= 363.0.0' # at least this version is required to work with workload identity
    #    service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS}}
    #    export_default_credentials: true
    #    project_id: ${{ env.PROJECT_ID }}
    
    - name: terraform setup
      run: |
          cd terraform/setup
          terraform init
          TF_LOG=debug terraform apply -auto-approve -var="project=$PROJECT_ID"
          cd ../..

    - name: 'Docker auth'
      run: |-
        gcloud auth configure-docker gcr.io
    # Build and push image to Google Container Registry
    # see https://cloud.google.com/container-registry/docs/advanced-authentication#json-key
    - name: Build
      run: |
        # cat ${GOOGLE_APPLICATION_CREDENTIALS} | docker login -u _json_key --password-stdin https://gcr.io
        docker build . -f docker/option_price.Dockerfile --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA --build-arg BINARY=option_price --build-arg MAJOR_VERSION=$MAJOR_VERSION
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker build . -f docker/option_price.Dockerfile --tag gcr.io/$PROJECT_ID/$SERVICE_AUTH_NAME:$GITHUB_SHA --build-arg BINARY=option_price_auth --build-arg MAJOR_VERSION=$MAJOR_VERSION
        docker push gcr.io/$PROJECT_ID/$SERVICE_AUTH_NAME:$GITHUB_SHA

    - name: terraform 
      run: |
        npx swagger-cli bundle -r -o ./docs/openapi_gcp.yml -t yaml ./docs/gcp_auth.yml
        cd terraform/app
        terraform init
        TF_LOG=debug terraform apply -auto-approve -var="custom_gcp_domain=$CUSTOM_GCP_DOMAIN" -var="custom_rapid_api_domain=$CUSTOM_RAPID_API_DOMAIN" -var="version_major=$MAJOR_VERSION" -var="project=$PROJECT_ID" -var="github_sha=$GITHUB_SHA" -var="service_name=$SERVICE_NAME" -var="service_name_auth=$SERVICE_AUTH_NAME"
        cd ../..
        rm ./docs/openapi_gcp.yml

    - name: templatize yml
      run: |
        cd terraform

        VISIBLE_HOST=$CUSTOM_GCP_DOMAIN VERSION_MAJOR=$MAJOR_VERSION HOST=$(terraform output realoptions_gateway_url) envsubst '${VISIBLE_HOST} ${VERSION_MAJOR} ${HOST}' < ../docs/gcp_auth.yml > final.yml
        mv -f final.yml ../docs/openapi_gcp.yml
        cat ../docs/openapi_gcp.yml
        cd ..
        npx swagger-cli bundle -r -o ./docs/openapi_gcp.yml -t yaml ./docs/openapi_gcp.yml

        VISIBLE_HOST=$CUSTOM_RAPID_API_DOMAIN VERSION_MAJOR=$MAJOR_VERSION envsubst '${VISIBLE_HOST} ${VERSION_MAJOR}' < ./docs/rapidapi_auth.yml > final.yml
        mv -f final.yml ./docs/openapi_rapidapi.yml
        cat ./docs/openapi_rapidapi.yml
        npx swagger-cli bundle -r -o ./docs/openapi_rapidapi.yml -t yaml ./docs/openapi_rapidapi.yml

    - name: validate swagger
      run: |
        cargo build --release
        npm ci
        npx swagger-cli validate ./docs/openapi_gcp.yml
        npx swagger-cli validate ./docs/openapi_rapidapi.yml

    

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
      id: tag_bump

    #- name: Upload to release
    #  uses: svenstaro/upload-release-action@v2
    #  with:
    #    repo_token: ${{ secrets.GITHUB_TOKEN }}
    #    file: ./docs/*.yml,
    #    tag: ${{ steps.tag_bump.outputs.new_tag }}
    #    release_name: release ${{ steps.tag_bump.outputs.new_tag }}
    #    overwrite: true
    #    file_glob: true

    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: release ${{ steps.tag_bump.outputs.new_tag }}
        tag_name: ${{ steps.tag_bump.outputs.new_tag }}
        files: |
          ./docs/*.yml
          ./techdoc/*.pdf
      
    - name: provision rapid api
      run: |
        curl --request PUT \
        --url https://openapi-provisioning.p.rapidapi.com/v1/apis/api_f9710e26-84c3-4c75-88ce-8ee99f9a3985 \
        --header 'content-type: multipart/form-data' \
        --header 'x-rapidapi-host: openapi-provisioning.p.rapidapi.com' \
        --header 'x-rapidapi-key: ${{ secrets.RAPID_API_TOKEN }}' \
        --form 'file=@docs/openapi_rapidapi.yml'

    - name: kickoff main site job
      run: |
        curl -s -X POST \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token  ${{ secrets.ACCESS_TOKEN }}" \
          -d '{"event_type": "on-demand-test"}' \
          https://api.github.com/repos/realoptions/developer_site/dispatches

    
